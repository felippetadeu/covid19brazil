{"version":3,"sources":["components/Navbar/index.jsx","services/ibgeServices.js","features/brasilIO/brasilIOSlice.js","components/Sidebar/index.jsx","components/Header/index.jsx","services/brasilIOServices.js","pages/Home/index.jsx","components/Main/index.jsx","App.jsx","features/counter/counterSlice.js","app/store.js","index.js"],"names":["Navbar","className","getUfs","a","axios","get","getMunicipios","uf","brasilIOSlice","createSlice","name","initialState","municipio","reducers","alterarUf","state","action","payload","alterarMunicipio","actions","brasilIO","Sidebar","dispatch","useDispatch","useState","ufs","setUfs","setUf","municipios","setMunicipios","city","setCity","useEffect","response","status","data","sort","b","sigla","map","r","value","label","getUFs","nome","getListaMunicipio","onChange","e","target","u","key","href","Header","getCOVIDInfo","Home","cidade","useSelector","estado","results","setResults","loading","setLoading","setData","date","moment","Date","format","handleCOVIDClick","onClick","title","columns","selector","progressPending","dense","highlightOnHover","pagination","locale","Main","App","counterSlice","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","brasilIOReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+UAGe,SAASA,IACtB,OACE,yBAAKC,UAAU,SAAf,O,kECHSC,EAAM,uCAAG,sBAAAC,EAAA,sEACPC,IAAMC,IAAI,+DADH,mFAAH,qDAINC,EAAa,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,sEACdC,IAAMC,IAAN,sEAAyEE,EAAzE,gBADc,mFAAH,sD,OCJbC,EAAgBC,YAAY,CACvCC,KAAM,WACNC,aAAc,CACZJ,GAAI,GACJK,UAAW,IAEbC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACjBD,EAAMR,GAAKS,EAAOC,SAEpBC,iBAAkB,SAACH,EAAOC,GACxBD,EAAMH,UAAYI,EAAOC,Y,EAKgBT,EAAcW,QAA9CL,E,EAAAA,UAAWI,E,EAAAA,iBAEbX,EAAK,SAAAQ,GAAK,OAAIA,EAAMK,SAASb,IAC7BK,EAAY,SAAAG,GAAK,OAAIA,EAAMK,SAASR,WAElCJ,IAAf,QChBe,SAASa,IACtB,IAAMC,EAAWC,cADc,EAGTC,mBAAS,IAHA,mBAGxBC,EAHwB,KAGnBC,EAHmB,OAIXF,mBAAS,IAJE,mBAIxBjB,EAJwB,KAIpBoB,EAJoB,OAKKH,mBAAS,IALd,mBAKxBI,EALwB,KAKZC,EALY,OAMPL,mBAAS,IANF,mBAMxBM,EANwB,KAMlBC,EANkB,KAQ/BC,qBAAU,WAAM,4CAEd,4BAAA7B,EAAA,sEACyBD,IADzB,OAE0B,OADlB+B,EADR,QAEeC,QACXR,EAAOO,EAASE,KAAKC,MAAK,SAAUjC,EAAGkC,GACrC,OAAIlC,EAAEmC,MAAQD,EAAEC,OAAe,EAC3BnC,EAAEmC,MAAQD,EAAEC,MAAc,EACvB,KACNC,KAAI,SAAAC,GACL,MAAO,CACLC,MAAOD,EAAEF,MACTI,MAAOF,EAAEF,WAVjB,4CAFc,uBAAC,WAAD,wBAiBdK,KACC,IAEHX,qBAAU,WAAM,4CACd,WAAiCzB,GAAjC,eAAAJ,EAAA,sEACyBG,EAAcC,GADvC,OAE0B,OADlB0B,EADR,QAEeC,QACXL,EAAcI,EAASE,KAAKC,MAAK,SAAUjC,EAAGkC,GAC5C,OAAIlC,EAAEyC,KAAOP,EAAEO,MAAc,EACzBzC,EAAEyC,KAAOP,EAAEO,KAAa,EACrB,KACNL,KAAI,SAAAC,GACL,MAAO,CACLC,MAAOD,EAAEI,KACTF,MAAOF,EAAEI,UAVjB,4CADc,sBAiBVrC,GAjBW,SAAD,2BAkBZsC,CAAkBtC,KAEnB,CAACA,IAYJ,OACE,yBAAKN,UAAU,iBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,4BAAQwC,MAAOlC,EAAIuC,SAAU,SAACC,GAAD,OAXlBN,EAWqCM,EAAEC,OAAOP,MAVjEnB,EAASR,EAAU2B,SACnBd,EAAMc,GAFY,IAACA,GAWsDxC,UAAU,UACzE,4BAAQwC,MAAM,IAAd,uBACChB,EAAIc,KAAK,SAAAU,GACR,OAAO,4BAAQR,MAAOQ,EAAER,MAAOS,IAAKD,EAAER,OAAQQ,EAAEP,YAItD,yBAAKzC,UAAU,mBACb,4BAAQwC,MAAOX,EAAMgB,SAAU,SAACC,GAAD,OAxBlBN,EAwBuCM,EAAEC,OAAOP,MAvBrEnB,EAASJ,EAAiBuB,SAC1BV,EAAQU,GAFY,IAACA,GAwBwDxC,UAAU,UAC7E,4BAAQwC,MAAM,IAAd,6BACCb,EAAWW,KAAK,SAAAU,GACf,OAAO,4BAAQR,MAAOQ,EAAER,MAAOS,IAAKD,EAAER,OAAQQ,EAAEP,aAKxD,yBAAKzC,UAAU,qBAAf,qHAC2G,uBAAGkD,KAAK,2BAAR,gB,MCrFpG,SAASC,IACtB,OACE,gCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,O,8CCPOC,EAAY,uCAAG,WAAOtC,EAAOe,GAAd,SAAA3B,EAAA,sEACbC,IAAMC,IAAN,iEAAoEU,EAApE,iBAAkFe,IADrE,mFAAH,wDCSV,SAASwB,IACtB,IAAMC,EAASC,YAAY5C,GACrB6C,EAASD,YAAYjD,GAFE,EAGCiB,mBAAS,IAHV,mBAGtBkC,EAHsB,KAGbC,EAHa,OAICnC,oBAAS,GAJV,mBAItBoC,EAJsB,KAIbC,EAJa,OAYLrC,mBAAS,IAZJ,mBAYtBW,EAZsB,KAYhB2B,EAZgB,OAaPtC,mBAAS,IAbF,gCAcOA,mBAAS,KAdhB,6BAgB7BQ,qBAAU,WACR0B,EAAQnB,KAAI,SAAAC,GAEV,OADAA,EAAEuB,KAAOC,IAAO,IAAIC,KAAKzB,EAAEuB,KAAO,cAAcG,OAAO,qBAChD1B,KAETsB,EAAQJ,KACP,CAACA,IAEJ,IAAMS,EAAgB,uCAAG,4BAAAhE,EAAA,sEACAkD,EAAaI,EAAQF,GADrB,OACjBtB,EADiB,OAEvB4B,GAAW,GACa,MAApB5B,EAASC,SACXyB,EAAW1B,EAASE,KAAKuB,SACzBG,GAAW,IALU,2CAAH,qDAStB,OACE,yBAAK5D,UAAU,IACb,6BAEGsD,EACAE,EAED,4BAAQW,QAASD,GAAjB,UAEF,yBAAKlE,UAAU,IACb,kBAAC,IAAD,CACEoE,MAAM,iBACNC,QAxCQ,CACd,CAAC5D,KAAM,SAAU6D,SAAU,QAC3B,CAAC7D,KAAM,OAAQ6D,SAAU,QACzB,CAAC7D,KAAM,cAAe6D,SAAU,aAChC,CAAC7D,KAAM,SAAU6D,SAAU,UAC3B,CAAC7D,KAAM,KAAM6D,SAAU,UAoCjBpC,KAAMA,EACNqC,gBAAiBZ,EACjBa,OAAO,EACPC,kBAAkB,EAClBC,YAAY,MAnDtBX,IAAOY,OAAO,S,MCNC,SAASC,IACtB,OACE,8BACE,kBAACvB,EAAD,OCOSwB,MATf,WACE,OACE,yBAAK7E,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCPO8E,EAAetE,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZ8B,MAAO,GAET5B,SAAU,CACRmE,UAAW,SAAAjE,GAKTA,EAAM0B,OAAS,GAEjBwC,UAAW,SAAAlE,GACTA,EAAM0B,OAAS,GAEjByC,kBAAmB,SAACnE,EAAOC,GACzBD,EAAM0B,OAASzB,EAAOC,Y,EAK+B8D,EAAa5D,QAiBzD4D,G,EAjBAC,U,EAAWC,U,EAAWC,kBAiBtBH,EAAf,SCrCeI,cAAe,CAC5BC,QAAS,CACPC,QAASC,EACTlE,SAAUmE,KCAdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.31c7e4da.chunk.js","sourcesContent":["import React from 'react'\r\nimport './index.scss'\r\n\r\nexport default function Navbar(){\r\n  return (\r\n    <nav className=\"fixed\">\r\n      nav\r\n    </nav>\r\n  )\r\n}","import axios from 'axios'\r\n\r\nexport const getUfs = async () => {\r\n  return await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n}\r\n\r\nexport const getMunicipios = async (uf) => {\r\n  return await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`)\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const brasilIOSlice = createSlice({\r\n  name: 'brasilio',\r\n  initialState: {\r\n    uf: '',\r\n    municipio: ''\r\n  },\r\n  reducers: {\r\n    alterarUf: (state, action) => {\r\n      state.uf = action.payload\r\n    },\r\n    alterarMunicipio: (state, action) => {\r\n      state.municipio = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const { alterarUf, alterarMunicipio } = brasilIOSlice.actions;\r\n\r\nexport const uf = state => state.brasilIO.uf;\r\nexport const municipio = state => state.brasilIO.municipio;\r\n\r\nexport default brasilIOSlice.reducer;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport './index.scss'\r\nimport { getUfs, getMunicipios } from '../../services/ibgeServices'\r\nimport { alterarUf, alterarMunicipio } from '../../features/brasilIO/brasilIOSlice'\r\n\r\nexport default function Sidebar(){\r\n  const dispatch = useDispatch()\r\n\r\n  const [ufs, setUfs] = useState([])\r\n  const [uf, setUf] = useState('')\r\n  const [municipios, setMunicipios] = useState([])\r\n  const [city, setCity] = useState('')\r\n\r\n  useEffect(() => {\r\n    \r\n    async function getUFs(){\r\n      const response = await getUfs()\r\n      if (response.status === 200){\r\n        setUfs(response.data.sort(function (a, b){\r\n          if (a.sigla < b.sigla) return -1;\r\n          if (a.sigla > b.sigla) return 1;\r\n          return 0;\r\n        }).map(r => {\r\n          return {\r\n            value: r.sigla,\r\n            label: r.sigla\r\n          }\r\n        }))\r\n      }\r\n    }\r\n    getUFs()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    async function getListaMunicipio(uf){\r\n      const response = await getMunicipios(uf)\r\n      if (response.status === 200){\r\n        setMunicipios(response.data.sort(function (a, b){\r\n          if (a.nome < b.nome) return -1;\r\n          if (a.nome > b.nome) return 1;\r\n          return 0;\r\n        }).map(r => {\r\n          return {\r\n            value: r.nome,\r\n            label: r.nome\r\n          }\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (uf) {\r\n      getListaMunicipio(uf)\r\n    }\r\n  }, [uf])\r\n\r\n  const atualizarCity = (value) => {\r\n    dispatch(alterarMunicipio(value))\r\n    setCity(value)\r\n  }\r\n\r\n  const atualizarUf = (value) => {\r\n    dispatch(alterarUf(value))\r\n    setUf(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar fixed\">\r\n      <div className=\"sidebar-content\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"menu\">\r\n          <div className=\"selecao-estado\">    \r\n            <select value={uf} onChange={(e) => atualizarUf(e.target.value)} className=\"select\">\r\n              <option value=\"\">Selecione um Estado</option>\r\n              {ufs.map((u => {\r\n                return <option value={u.value} key={u.value}>{u.label}</option>\r\n              }))}\r\n            </select>\r\n          </div>\r\n          <div className=\"selecao-cidades\">\r\n            <select value={city} onChange={(e) => atualizarCity(e.target.value)} className=\"select\">\r\n              <option value=\"\">Selecione um Município</option>\r\n              {municipios.map((u => {\r\n                return <option value={u.value} key={u.value}>{u.label}</option>\r\n              }))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"direitos-autorais\">\r\n          Esse é um site para uso de aprendizado na tecnologia React e os dados apresentados são através da API do <a href=\"https://brasil.io/home/\">Brasil.IO</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport Navbar from '../Navbar'\r\nimport Sidebar from '../Sidebar'\r\nimport './index.scss'\r\n\r\nexport default function Header(){\r\n  return (\r\n    <header>\r\n      <Sidebar />\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}","import axios from 'axios';\r\n\r\nexport const getCOVIDInfo = async (state, city) => {\r\n  return await axios.get(`https://brasil.io/api/dataset/covid19/caso/data/?state=${state}&city=${city}`)\r\n};","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\nimport DataTable from 'react-data-table-component'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { getCOVIDInfo } from '../../services/brasilIOServices'\r\nimport { getUfs, getMunicipios } from '../../services/ibgeServices'\r\nimport { uf, municipio } from '../../features/brasilIO/brasilIOSlice'\r\n\r\nmoment.locale('pt-Br')\r\nexport default function Home() {\r\n  const cidade = useSelector(municipio)\r\n  const estado = useSelector(uf)\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const columns = [\r\n    {name: 'Cidade', selector: 'city'},\r\n    {name: 'Data', selector: 'date'},\r\n    {name: 'Confirmados', selector: 'confirmed'},\r\n    {name: 'Mortes', selector: 'deaths'},\r\n    {name: 'UF', selector: 'state'},\r\n  ]\r\n  const [data, setData] = useState([])\r\n  const [ufs, setUfs] = useState([])\r\n  const [municipios, setMunicipios] = useState([])\r\n\r\n  useEffect(() => {\r\n    results.map(r => {\r\n      r.date = moment(new Date(r.date + \"T00:00:00\")).format('DD/MM/YYYY - dddd')\r\n      return r\r\n    })\r\n    setData(results)\r\n  }, [results])\r\n\r\n  const handleCOVIDClick = async () => {\r\n    const response = await getCOVIDInfo(estado, cidade)\r\n    setLoading(true)\r\n    if (response.status === 200){\r\n      setResults(response.data.results)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div>\r\n        \r\n        {cidade}\r\n        {estado}\r\n        \r\n        <button onClick={handleCOVIDClick}>COVID</button>\r\n      </div>\r\n      <div className=\"\">\r\n        <DataTable \r\n          title=\"CASOS COVID-19\"\r\n          columns={columns}\r\n          data={data}\r\n          progressPending={loading}\r\n          dense={true}\r\n          highlightOnHover={true}\r\n          pagination={true}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport Home from '../../pages/Home'\r\nimport './index.scss'\r\n\r\nexport default function Main(){\r\n  return (\r\n    <main>\r\n      <Home />\r\n    </main>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport Main from './components/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport brasilIOReducer from '../features/brasilIO/brasilIOSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    brasilIO: brasilIOReducer\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}